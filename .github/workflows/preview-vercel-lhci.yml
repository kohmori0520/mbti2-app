name: Preview on Vercel + Lighthouse
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]

permissions:
  contents: read
  deployments: write
  pull-requests: write
  issues: write
  # metadata: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.vercel.outputs.PREVIEW_URL || steps.vercel.outputs.preview-url || steps.vercel.outputs.DEPLOYMENT_URL || steps.vercel.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - name: Install Vercel CLI (for action internal usage)
        run: npm install -g vercel@latest
      - name: Deploy to Vercel (Preview)
        id: vercel
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # そのままでOK
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          PRODUCTION: false

      - name: Echo preview url
        run: |
          echo "Preview: ${{ steps.vercel.outputs.PREVIEW_URL }}"

  lighthouse:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Build (with Vite env)
        run: |
          echo "Has VITE_SUPABASE_URL: $([ -n "$VITE_SUPABASE_URL" ] && echo yes || echo no)"
          npm run build
      - name: Start local preview server
        run: |
          nohup npm run preview -- --host 127.0.0.1 --port 4173 --strictPort > preview.log 2>&1 &
          for i in {1..20}; do
            code=$(curl -L -s -o /dev/null -w "%{http_code}" http://127.0.0.1:4173 || echo 000)
            size=$(curl -L -s http://127.0.0.1:4173 | wc -c || echo 0)
            if [ "$code" = "200" ] && [ "$size" -gt 100 ]; then
              echo "Local preview is ready (code=$code, bytes=$size)."
              sleep 3
              break
            fi
            echo "Waiting... HTTP=$code, bytes=$size"
            sleep 2
          done
          echo '--- preview.log (last 200 lines) ---'
          tail -n 200 preview.log || true
      - name: Create Lighthouse config (desktop, no throttling)
        run: |
          echo '{ "ci": { "collect": { "settings": { "throttlingMethod": "provided", "formFactor": "desktop", "screenEmulation": { "mobile": false, "width": 1366, "height": 768, "deviceScaleFactor": 1, "disabled": false }, "maxWaitForFcp": 60000, "maxWaitForLoad": 120000 }, "chromeFlags": "--no-sandbox --disable-dev-shm-usage" } } }' > lighthouserc.ci.json
      - name: Audit URLs using Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: http://localhost:4173
          configPath: lighthouserc.ci.json
          budgetPath: ./.lighthouse/budget.json
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 1
      - name: Upload preview server logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: preview-log
          path: preview.log